{
  "cs1graphics": "# Note: This is a fake cs1graphics that doesn't draw anything but it keeps\n# track of coordinates and sizes.\n\nimport copy\n\nclass Gobj:\ndef __init__(self, info):\nself._info = info\nself.fillColor = 'transparent'\nself.borderColor = 'black'\nself.rotation = 0\nself.size = 1\n\nfor (key, val) in info.items():\nsetattr(self, key, val)\n\nself.offset = [0, 0]\nif hasattr(self, 'center'):\nself.reference = [self.center.x, self.center.y]\nelif self.type == 'Polygon':\nself.reference = [self.points[0].x, self.points[0].y]\nelse:\nself.reference = [0, 0]\n\ndef setFillColor(self, color):\nself.fillColor = color\n\ndef setBorderColor(self, color):\nself.borderColor = color\n\ndef rotate(self, rotation):\nself.rotation += rotation\n\ndef scale(self, factor):\nself.size *= factor\n\ndef moveTo(self, x, y):\nself.offset[0] = x - self.reference[0]\nself.offset[1] = y - self.reference[1]\n\ndef move(self, dx, dy):\nself.offset[0] += dx\nself.offset[1] += dy\n\ndef get_location(self):\nreturn [\nself.reference[0] + self.offset[0],\nself.reference[1] + self.offset[1]\n]\n\nclass Layer(Gobj):\ndef __init__(self):\nsuper(Layer, self).__init__({'type': 'Layer'})\nself.contents = []\n\ndef add(self, item):\nself.contents.append(item)\n\ndef clone(self):\nreturn copy.deepcopy(self)\n\nclass Canvas(Layer):\ndef __init__(\nself,\nwidth=200,\nheight=200,\nbgColor='white',\ntitle='Graphics canvas'\n:\nsuper(Canvas, self).__init__()\nself.type = 'Canvas'\nself.width = width\nself.height = height\nself.bgColor = bgColor\nself.title = title\n\ndef Polygon(*points):\nreturn Gobj({ 'type': 'Polygon', 'points': points })\n\ndef Point(x=0, y=0):\nreturn Gobj({ 'type': 'Point', 'x': x, 'y': y })\n\ndef Circle(radius=10, center=Point(0, 0)):\nreturn Gobj({ 'type': 'Circle', 'radius': radius, 'center': center })\n\ndef Ellipse(width=10, height=10, center=Point(0, 0)):\nreturn Gobj(\n{ 'type': 'Ellipse', 'width': width, 'height': height, 'center': center }\n\n\ndef Rectangle(width=10, height=10, center=Point(0, 0)):\nreturn Gobj(\n{ 'type': 'Rectangle', 'width': width, 'height': height, 'center': center }\n\n\n# TODO: Path, Text, Image, and Color",
  "bunny": "from cs1graphics import *\ndef makeBunny():\n\nbunny = Layer()\n\nleftEar = Ellipse(40,100,Point(-25,-55))\nleftEar.setFillColor('white')\nleftEar.rotate(-10)\nbunny.add(leftEar)\n\nrightEar = Ellipse(40,100,Point(25,-55))\nrightEar.setFillColor('white')\nrightEar.rotate(10)\nbunny.add(rightEar)\n\nleftInnerEar = Ellipse(20,80, Point(-25,-55))\nleftInnerEar.setFillColor('pink')\nleftInnerEar.rotate(-10)\nbunny.add(leftInnerEar)\n\nrightInnerEar = Ellipse(20,80, Point(25,-55))\nrightInnerEar.setFillColor('pink')\nrightInnerEar.rotate(10)\nbunny.add(rightInnerEar)\n\nface = Ellipse(105, 95, Point(0,25))\nface.setFillColor('white')\nbunny.add(face)\n\nnose = Polygon(Point(2,51), Point(-2,51), Point(-10,41), Point(-9, 40), Point(8,40), Point(10, 42))\nnose.setBorderColor('grey')\nnose.setFillColor('grey')\nbunny.add(nose)\n\nleftEye = Circle(7, Point(-20,15))\nleftEye.setFillColor('lightblue')\nleftEye.setBorderColor('lightblue')\nrightEye = Circle(7, Point(20, 15))\nrightEye.setFillColor('lightblue')\nrightEye.setBorderColor('lightblue')\nbunny.add(leftEye)\nbunny.add(rightEye)\n\nreturn bunny",
  "wedge": "from cs1graphics import *\n\ndef makeWedge():\n\nwedge = Polygon(Point(0,0), Point(0,200), Point(300,0))\nwedge.setFillColor('orange')\nreturn wedge"
}
